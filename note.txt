6789

# Perform a build
FROM golang:alpine AS build
EXPOSE 8080 1935
RUN mkdir /build
ADD . /build
WORKDIR /build
RUN apk update && apk add --no-cache gcc build-base linux-headers

ARG VERSION=dev
ENV VERSION=${VERSION}
ARG GIT_COMMIT
ENV GIT_COMMIT=${GIT_COMMIT}
ARG NAME=docker
ENV NAME=${NAME}

RUN CGO_ENABLED=1 GOOS=linux go build -a -installsuffix cgo -ldflags "-extldflags \"-static\" -s -w -X github.com/owncast/owncast/config.GitCommit=$GIT_COMMIT -X github.com/owncast/owncast/config.VersionNumber=$VERSION -X github.com/owncast/owncast/config.BuildPlatform=$NAME" -o owncast .

# Create the image by copying the result of the build into a new alpine image
FROM alpine
RUN apk update && apk add --no-cache ffmpeg ffmpeg-libs ca-certificates && update-ca-certificates

# Copy owncast assets
WORKDIR /app
COPY --from=build /build/owncast /app/owncast
COPY --from=build /build/webroot /app/webroot
COPY --from=build /build/static /app/static
RUN mkdir /app/data
CMD ["/app/owncast"]



docker run -v `pwd`/data:/app/data -p 8080:8080 -p 1935:1935 -it gabekangas/owncast:latest


docker build -t

docker build -t owncast:latest .


docker run -v --rm `pwd`/data:/app/data -p 8080:8080 -p 1935:1935 -it ufaproufax/owncast:latest



docker run -v `pwd`/data:/app/data -p 8080:8080 -p 1935:1935 -it ufaproufax/server-live-ufax:latest


docker push ufaproufax/server-live-ufax:latest

docker build -t ufaproufax/server-live-ufax:latest .

ffmpeg -reconnect 1 -reconnect_at_eof 1 -reconnect_streamed 1 -reconnect_delay_max 2  -re -y -i " + '"' + VID_F_LIVE + '"' + " -i " + '"https://www.img.in.th/images/eee651c4a027b0525d6777709633222a.png"' + ' -filter_complex "overlay=10:10' + '"' + " -s 1280:720 -aspect 16:9 -r 30 -pix_fmt yuv420p -c:v libx264 -crf 23 -preset:v medium -profile:v high -g 60 -threads 4 -c:a aac -b:a 192K -f flv " + '"' + stream_url + '"

rtmp://43.229.79.68:1935/live/abc123

ssh root@43.229.79.68